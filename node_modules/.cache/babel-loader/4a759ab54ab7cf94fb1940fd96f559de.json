{"ast":null,"code":"var _jsxFileName = \"/Users/jinbeom/reminders-copy-project/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass RmList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rmListBodyItems: []\n    };\n    this.handleAddRmListBodyItem = this.handleAddRmListBodyItem.bind(this);\n  }\n\n  handleAddRmListBodyItem() {\n    this.setState({\n      rmListBodyItems: this.state.rmListBodyItems.concat(React.createElement(RmListbodyItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }))\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rm-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rm-list-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"New List\"), React.createElement(\"div\", {\n      className: \"rm-list-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.state.rmListBodyItems), React.createElement(\"div\", {\n      className: \"rm-list-footer\",\n      onClick: () => this.handleAddRmListBodyItem(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Add Reminder\"));\n  }\n\n}\n\nclass RmListbodyItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCompleted: false,\n      title: \"title\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState({\n      isCompleted: !this.state.isCompleted\n    });\n  }\n\n  isCompletedClass() {\n    return this.state.isCompleted ? \"is-completed\" : \"\";\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rm-list-body-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: `rm-list-body-item-task-icon ${this.isCompletedClass()}`,\n      onClick: () => this.handleClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"rm-list-body-item-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rm-list-body-item-content-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"div\", {\n      className: \"rm-list-body-item-content-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass RmListMenuItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSelected: false,\n      rmList: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  isSelectedClass() {\n    return this.state.isSelected ? \"is-selected\" : \"\";\n  }\n\n  handleClick() {\n    this.setState({\n      isSelected: !this.state.isSelected\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: `rm-list-menu-item ${this.isSelectedClass()}`,\n      onClick: () => {\n        this.handleClick();\n        this.props.onSelectedRmListMenu(this);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rm-list-menu-item-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.props.title));\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(prop) {\n    super(prop);\n    this.state = {\n      selectedRmListMenuItem: null,\n      rmListMenuItems: []\n    };\n    this.handleAddList = this.handleAddList.bind(this);\n    this.handleSelectedRmListMenuItem = this.handleSelectedRmListMenuItem.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/reminders/user/jinbeom@samsung.com/list\").then(res => res.json()).then(result => {\n      console.debug(result);\n      this.setState({\n        rmListBodyItems: result\n      });\n    }, error => {\n      console.error(error);\n    });\n  }\n\n  handleSelectedRmListMenuItem(rmListMenuItem) {\n    if (this.state.selectedRmListMenu != null) {\n      this.state.selectedRmListMenu.handleClick();\n    }\n\n    this.setState({\n      selectedRmListMenu: rmListMenuItem\n    });\n  }\n\n  handleAddList() {\n    this.setState({\n      rmListMenuItems: this.state.rmListMenuItems.concat(React.createElement(RmListMenuItem, {\n        title: \"New List\",\n        onSelectedRmListMenu: this.handleSelectedRmListMenuItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }))\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"root-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rm-toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"ICloud Reminders\"), React.createElement(\"div\", {\n      className: \"gnb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"\\uAE40\\uC9C4\\uBC94\")), React.createElement(\"div\", {\n      className: \"main-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"scrollable-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rm-list-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.state.rmListMenuItems)), React.createElement(\"div\", {\n      className: \"sidebar-footer\",\n      onClick: () => this.handleAddList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Add List\")), React.createElement(RmList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jinbeom/reminders-copy-project/src/App.js"],"names":["React","RmList","Component","constructor","props","state","rmListBodyItems","handleAddRmListBodyItem","bind","setState","concat","render","RmListbodyItem","isCompleted","title","handleClick","isCompletedClass","RmListMenuItem","isSelected","rmList","isSelectedClass","onSelectedRmListMenu","App","prop","selectedRmListMenuItem","rmListMenuItems","handleAddList","handleSelectedRmListMenuItem","componentDidMount","fetch","then","res","json","result","console","debug","error","rmListMenuItem","selectedRmListMenu"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass RmList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rmListBodyItems: []\n    }\n\n    this.handleAddRmListBodyItem = this.handleAddRmListBodyItem.bind(this);\n  }\n\n  handleAddRmListBodyItem() {\n    this.setState({rmListBodyItems: this.state.rmListBodyItems.concat(\n      <RmListbodyItem></RmListbodyItem>\n    )});\n  }\n\n  render() {\n    return (\n      <div className=\"rm-list\">\n        <div className=\"rm-list-header\">\n            New List\n        </div>\n        <div className=\"rm-list-body\">\n          {this.state.rmListBodyItems}\n        </div>\n        <div className=\"rm-list-footer\" onClick={() => this.handleAddRmListBodyItem()}>\n          Add Reminder\n        </div>\n      </div>\n    );\n  }\n}\n\nclass RmListbodyItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCompleted: false,\n      title: \"title\"\n    }\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState({isCompleted: !this.state.isCompleted});\n  }\n\n  isCompletedClass() {\n    return this.state.isCompleted ? \"is-completed\" : \"\";\n  }\n\n  render() {\n    return(\n      <div className=\"rm-list-body-item\">\n        <div className={`rm-list-body-item-task-icon ${this.isCompletedClass()}`}\n          onClick={() => this.handleClick()}>\n        </div>\n        <div className=\"rm-list-body-item-content\">\n          <div className=\"rm-list-body-item-content-title\">{this.state.title}</div>\n          <div className=\"rm-list-body-item-content-border\"></div>\n        </div>\n      </div>\n    ); \n  }\n}\n\nclass RmListMenuItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSelected: false,\n      rmList: null\n    }\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  isSelectedClass() {\n    return this.state.isSelected ? \"is-selected\" : \"\";\n  }\n\n  handleClick() {\n    this.setState({isSelected: !this.state.isSelected});\n  }\n  \n  render() {\n    return (\n      <div className={`rm-list-menu-item ${this.isSelectedClass()}`}\n        onClick={() => {\n          this.handleClick();\n          this.props.onSelectedRmListMenu(this);\n        }\n      }>\n        <div className=\"rm-list-menu-item-content\">{this.props.title}</div>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(prop) {\n    super(prop);\n\n    this.state = {\n      selectedRmListMenuItem: null,\n      rmListMenuItems: []\n    }\n\n    this.handleAddList = this.handleAddList.bind(this);\n    this.handleSelectedRmListMenuItem = this.handleSelectedRmListMenuItem.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/reminders/user/jinbeom@samsung.com/list\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.debug(result);\n          this.setState({ rmListBodyItems: result});\n        },\n        (error) => {\n          console.error(error);\n        }\n      );\n  }\n\n  handleSelectedRmListMenuItem(rmListMenuItem) {\n    if (this.state.selectedRmListMenu != null) {\n      this.state.selectedRmListMenu.handleClick();\n    }\n    this.setState({selectedRmListMenu: rmListMenuItem});\n  }\n\n  handleAddList() {\n    this.setState({rmListMenuItems: this.state.rmListMenuItems.concat(\n      <RmListMenuItem title=\"New List\" onSelectedRmListMenu={this.handleSelectedRmListMenuItem}></RmListMenuItem>\n    )});\n  }\n\n  render() {\n    return (\n      <div className=\"root-view\">\n        <div className=\"rm-toolbar\">\n          <div className=\"logo\">ICloud Reminders</div>\n          <div className=\"gnb\">김진범</div>\n        </div>\n        <div className=\"main-view\">\n          <div className=\"sidebar\">\n            <div className=\"scrollable-area\">\n              <div className=\"rm-list-menu\">\n                {this.state.rmListMenuItems}\n              </div>\n            </div>\n            <div className=\"sidebar-footer\" onClick={() => this.handleAddList()}>\n              Add List\n            </div>\n          </div>\n          <RmList></RmList>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}